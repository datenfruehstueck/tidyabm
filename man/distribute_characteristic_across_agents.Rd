% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/environment.R
\name{distribute_characteristic_across_agents}
\alias{distribute_characteristic_across_agents}
\alias{distribute_characteristic_across_agents.tidyabm_env}
\title{Distribute a given characteristic across a range of agents}
\usage{
distribute_characteristic_across_agents(
  .tidyabm,
  .name,
  .value,
  ...,
  .overwrite = FALSE
)

\method{distribute_characteristic_across_agents}{tidyabm_env}(
  .tidyabm,
  .name,
  .value,
  ...,
  .overwrite = FALSE
)
}
\arguments{
\item{.tidyabm}{the \code{tidyabm_env} holding the (range of) agents}

\item{.name}{character string representing the name of the new characteristic}

\item{.value}{a vector of the same length as the range of agents or a
(anonymous) function to be called for each agent.
For functions you may use a function which gets called for every agent
with three arguments: \code{i} (a numeric iterator ranging from 1 for the first
agent to n for the last agent), \code{agent} (the respective \code{tidyabm} agent),
and \code{agents} (a \link{tibble} resembling all filtered agents \emph{before}
distribution of this characteristic started but \emph{after} filter expressions
were applied, see \code{...}). The function should only return one value of
the characteristic, namely the one for the current/respective agent.
If you write your own functions or need to provide additional arguments to
functions, use the style of anonymized functions directly in-line (through
\code{function(i, agent, agents) ...} or \verb{\\(i, agent, agents) ...}).}

\item{...}{<\code{\link[rlang:args_data_masking]{data-masking}}> expressions that
return a logical value and are defined in terms of all characteristics
and variables of all added agents. This is to specify which agents get the
new characteristic. If omitted, all present agents are receiving the new
characteristic. If multiple expressions are included, they are combined
with the \code{&} operator.}

\item{.overwrite}{if \code{FALSE} (the default), characteristics with the same
name will not be overwritten (a warning will be issued)}
}
\value{
\code{tidyabm} object
}
\description{
This function allows you to set a characteristic for a set of agents that
needs is initially dependent on each other (e.g., a normally distributed
characteristic). If you just want to set an individual characteristic to
agents, use \link{set_characteristic} instead as it is much faster.
}
\examples{
create_grid_environment(seed = 168, size = 20) \%>\%
  add_agents(create_agent(), 160) \%>\%
  distribute_characteristic_across_agents(
    'friend',
    \(i, agent, agents) ifelse(stats::runif(1) > 0.5, i-1, 0)
  )

a1 <- create_agent() \%>\%
  set_characteristic(age = 'young')
a2 <- create_agent() \%>\%
  set_characteristic(age = 'old')
m <- create_grid_environment(seed = 486, size = 50) \%>\%
  add_agents(a1, 100) \%>\%
  add_agents(a2, 100) \%>\%
  distribute_characteristic_across_agents(
    'opinion',
    stats::rnorm(100),
    age == 'old'
  )

}
